// Code generated by swagger-to-go. DO NOT EDIT.
package companypb

import (
	"encoding/json"

	"elbix.dev/engine/pkg/assert"
	"elbix.dev/engine/pkg/grpcgw"
)

const paths = "{\"/v1/companies\":{\"get\":{\"operationId\":\"GetCompanies\",\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/companyCompaniesResponse\"}}},\"security\":[{\"Authentication\":[]}],\"tags\":[\"CompanySystem\"]},\"post\":{\"operationId\":\"CreateCompany\",\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/companyCreateCompanyRequest\"}}],\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/companyCompanyResponse\"}}},\"security\":[{\"Authentication\":[]}],\"tags\":[\"CompanySystem\"]}},\"/v1/companies/{id}\":{\"delete\":{\"operationId\":\"DeleteCompany\",\"parameters\":[{\"format\":\"int64\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/companyDeleteCompanyResponse\"}}},\"security\":[{\"Authentication\":[]}],\"tags\":[\"CompanySystem\"]},\"get\":{\"operationId\":\"GetCompany\",\"parameters\":[{\"format\":\"int64\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/companyCompanyResponse\"}}},\"security\":[{\"Authentication\":[]}],\"tags\":[\"CompanySystem\"]},\"put\":{\"operationId\":\"UpdateCompany\",\"parameters\":[{\"format\":\"int64\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"type\":\"string\"},{\"in\":\"body\",\"name\":\"body\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/companyUpdateCompanyRequest\"}}],\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/companyCompanyResponse\"}}},\"security\":[{\"Authentication\":[]}],\"tags\":[\"CompanySystem\"]}}}"
const definitions = "{\"companyCompaniesResponse\":{\"properties\":{\"companies\":{\"items\":{\"$ref\":\"#/definitions/companyCompanyResponse\"},\"type\":\"array\"}},\"type\":\"object\"},\"companyCompanyResponse\":{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"status\":{\"$ref\":\"#/definitions/companyCompanyStatus\"}},\"type\":\"object\"},\"companyCompanyStatus\":{\"default\":\"COMPANY_STATUS_INVALID\",\"enum\":[\"COMPANY_STATUS_INVALID\",\"COMPANY_STATUS_PENDING\",\"COMPANY_STATUS_ACTIVE\",\"COMPANY_STATUS_BANNED\"],\"type\":\"string\"},\"companyCreateCompanyRequest\":{\"properties\":{\"name\":{\"type\":\"string\"}},\"type\":\"object\"},\"companyDeleteCompanyResponse\":{\"type\":\"object\"},\"companyUpdateCompanyRequest\":{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"status\":{\"$ref\":\"#/definitions/companyCompanyStatus\"}},\"type\":\"object\"}}"

func init() {
	var (
		p = make(map[string]interface{})
		d = make(map[string]interface{})
	)

	assert.Nil(json.Unmarshal([]byte(paths), &p))
	assert.Nil(json.Unmarshal([]byte(definitions), &d))

	grpcgw.RegisterSwagger(p, d)
}
