// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: modules/company/proto/company.proto

package companypb

import (
	context "context"
	fmt "fmt"
	_ "github.com/fzerorubigd/protobuf/extra"
	types "github.com/fzerorubigd/protobuf/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CompanyStatus int32

const (
	CompanyStatus_COMPANY_STATUS_INVALID CompanyStatus = 0
	CompanyStatus_COMPANY_STATUS_PENDING CompanyStatus = 1
	CompanyStatus_COMPANY_STATUS_ACTIVE  CompanyStatus = 2
	CompanyStatus_COMPANY_STATUS_BANNED  CompanyStatus = 3
)

var CompanyStatus_name = map[int32]string{
	0: "COMPANY_STATUS_INVALID",
	1: "COMPANY_STATUS_PENDING",
	2: "COMPANY_STATUS_ACTIVE",
	3: "COMPANY_STATUS_BANNED",
}

var CompanyStatus_value = map[string]int32{
	"COMPANY_STATUS_INVALID": 0,
	"COMPANY_STATUS_PENDING": 1,
	"COMPANY_STATUS_ACTIVE":  2,
	"COMPANY_STATUS_BANNED":  3,
}

func (x CompanyStatus) String() string {
	return proto.EnumName(CompanyStatus_name, int32(x))
}

func (CompanyStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{0}
}

type Company struct {
	Id                   int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id" `
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name" `
	Status               CompanyStatus    `protobuf:"varint,3,opt,name=status,proto3,enum=company.CompanyStatus" json:"status,omitempty" db:"status" `
	CreatedAt            *types.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" db:"created_at" `
	UpdatedAt            *types.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at" `
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Company) Reset()         { *m = Company{} }
func (m *Company) String() string { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()    {}
func (*Company) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{0}
}
func (m *Company) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Company.Unmarshal(m, b)
}
func (m *Company) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Company.Marshal(b, m, deterministic)
}
func (m *Company) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Company.Merge(m, src)
}
func (m *Company) XXX_Size() int {
	return xxx_messageInfo_Company.Size(m)
}
func (m *Company) XXX_DiscardUnknown() {
	xxx_messageInfo_Company.DiscardUnknown(m)
}

var xxx_messageInfo_Company proto.InternalMessageInfo

func (m *Company) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Company) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Company) GetStatus() CompanyStatus {
	if m != nil {
		return m.Status
	}
	return CompanyStatus_COMPANY_STATUS_INVALID
}

func (m *Company) GetCreatedAt() *types.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Company) GetUpdatedAt() *types.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetCompanyRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompanyRequest) Reset()         { *m = GetCompanyRequest{} }
func (m *GetCompanyRequest) String() string { return proto.CompactTextString(m) }
func (*GetCompanyRequest) ProtoMessage()    {}
func (*GetCompanyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{1}
}
func (m *GetCompanyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyRequest.Unmarshal(m, b)
}
func (m *GetCompanyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyRequest.Marshal(b, m, deterministic)
}
func (m *GetCompanyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyRequest.Merge(m, src)
}
func (m *GetCompanyRequest) XXX_Size() int {
	return xxx_messageInfo_GetCompanyRequest.Size(m)
}
func (m *GetCompanyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyRequest proto.InternalMessageInfo

func (m *GetCompanyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CompanyResponse struct {
	Id                   int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               CompanyStatus `protobuf:"varint,3,opt,name=status,proto3,enum=company.CompanyStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CompanyResponse) Reset()         { *m = CompanyResponse{} }
func (m *CompanyResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyResponse) ProtoMessage()    {}
func (*CompanyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{2}
}
func (m *CompanyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyResponse.Unmarshal(m, b)
}
func (m *CompanyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyResponse.Marshal(b, m, deterministic)
}
func (m *CompanyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyResponse.Merge(m, src)
}
func (m *CompanyResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyResponse.Size(m)
}
func (m *CompanyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyResponse proto.InternalMessageInfo

func (m *CompanyResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CompanyResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompanyResponse) GetStatus() CompanyStatus {
	if m != nil {
		return m.Status
	}
	return CompanyStatus_COMPANY_STATUS_INVALID
}

type CreateCompanyRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCompanyRequest) Reset()         { *m = CreateCompanyRequest{} }
func (m *CreateCompanyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCompanyRequest) ProtoMessage()    {}
func (*CreateCompanyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{3}
}
func (m *CreateCompanyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCompanyRequest.Unmarshal(m, b)
}
func (m *CreateCompanyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCompanyRequest.Marshal(b, m, deterministic)
}
func (m *CreateCompanyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCompanyRequest.Merge(m, src)
}
func (m *CreateCompanyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCompanyRequest.Size(m)
}
func (m *CreateCompanyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCompanyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCompanyRequest proto.InternalMessageInfo

func (m *CreateCompanyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetCompaniesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompaniesRequest) Reset()         { *m = GetCompaniesRequest{} }
func (m *GetCompaniesRequest) String() string { return proto.CompactTextString(m) }
func (*GetCompaniesRequest) ProtoMessage()    {}
func (*GetCompaniesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{4}
}
func (m *GetCompaniesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompaniesRequest.Unmarshal(m, b)
}
func (m *GetCompaniesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompaniesRequest.Marshal(b, m, deterministic)
}
func (m *GetCompaniesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompaniesRequest.Merge(m, src)
}
func (m *GetCompaniesRequest) XXX_Size() int {
	return xxx_messageInfo_GetCompaniesRequest.Size(m)
}
func (m *GetCompaniesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompaniesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompaniesRequest proto.InternalMessageInfo

type CompaniesResponse struct {
	Companies            []*CompanyResponse `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CompaniesResponse) Reset()         { *m = CompaniesResponse{} }
func (m *CompaniesResponse) String() string { return proto.CompactTextString(m) }
func (*CompaniesResponse) ProtoMessage()    {}
func (*CompaniesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{5}
}
func (m *CompaniesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompaniesResponse.Unmarshal(m, b)
}
func (m *CompaniesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompaniesResponse.Marshal(b, m, deterministic)
}
func (m *CompaniesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompaniesResponse.Merge(m, src)
}
func (m *CompaniesResponse) XXX_Size() int {
	return xxx_messageInfo_CompaniesResponse.Size(m)
}
func (m *CompaniesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompaniesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompaniesResponse proto.InternalMessageInfo

func (m *CompaniesResponse) GetCompanies() []*CompanyResponse {
	if m != nil {
		return m.Companies
	}
	return nil
}

type DeleteCompanyRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCompanyRequest) Reset()         { *m = DeleteCompanyRequest{} }
func (m *DeleteCompanyRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCompanyRequest) ProtoMessage()    {}
func (*DeleteCompanyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{6}
}
func (m *DeleteCompanyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCompanyRequest.Unmarshal(m, b)
}
func (m *DeleteCompanyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCompanyRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCompanyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCompanyRequest.Merge(m, src)
}
func (m *DeleteCompanyRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCompanyRequest.Size(m)
}
func (m *DeleteCompanyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCompanyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCompanyRequest proto.InternalMessageInfo

func (m *DeleteCompanyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteCompanyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCompanyResponse) Reset()         { *m = DeleteCompanyResponse{} }
func (m *DeleteCompanyResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCompanyResponse) ProtoMessage()    {}
func (*DeleteCompanyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24f2033e12fc8969, []int{7}
}
func (m *DeleteCompanyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCompanyResponse.Unmarshal(m, b)
}
func (m *DeleteCompanyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCompanyResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCompanyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCompanyResponse.Merge(m, src)
}
func (m *DeleteCompanyResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCompanyResponse.Size(m)
}
func (m *DeleteCompanyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCompanyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCompanyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("company.CompanyStatus", CompanyStatus_name, CompanyStatus_value)
	proto.RegisterType((*Company)(nil), "company.Company")
	proto.RegisterType((*GetCompanyRequest)(nil), "company.GetCompanyRequest")
	proto.RegisterType((*CompanyResponse)(nil), "company.CompanyResponse")
	proto.RegisterType((*CreateCompanyRequest)(nil), "company.CreateCompanyRequest")
	proto.RegisterType((*GetCompaniesRequest)(nil), "company.GetCompaniesRequest")
	proto.RegisterType((*CompaniesResponse)(nil), "company.CompaniesResponse")
	proto.RegisterType((*DeleteCompanyRequest)(nil), "company.DeleteCompanyRequest")
	proto.RegisterType((*DeleteCompanyResponse)(nil), "company.DeleteCompanyResponse")
}

func init() {
	proto.RegisterFile("modules/company/proto/company.proto", fileDescriptor_24f2033e12fc8969)
}

var fileDescriptor_24f2033e12fc8969 = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcf, 0x6e, 0xd3, 0x4c,
	0x10, 0xaf, 0x93, 0x7e, 0xed, 0xd7, 0x6d, 0x92, 0xa6, 0xfb, 0xa5, 0xfd, 0x12, 0xab, 0x10, 0x6b,
	0x2b, 0xa1, 0x28, 0xa2, 0x31, 0x0d, 0x02, 0xa4, 0x9e, 0x70, 0xfe, 0xa8, 0x8a, 0x80, 0x10, 0xa5,
	0xa1, 0x12, 0x5c, 0xaa, 0x4d, 0xbc, 0x75, 0x2d, 0xd5, 0x5e, 0x13, 0xaf, 0x81, 0x50, 0x2a, 0x24,
	0x2e, 0x48, 0x3d, 0x82, 0x78, 0x0d, 0x90, 0x78, 0x0a, 0xee, 0xdc, 0x38, 0xe4, 0xc4, 0x03, 0x54,
	0x79, 0x02, 0x64, 0x7b, 0x13, 0x27, 0x4e, 0x4a, 0xe0, 0xe2, 0x64, 0x76, 0x7e, 0x33, 0xf3, 0x9b,
	0xdf, 0xcc, 0x2e, 0xd8, 0x36, 0xa8, 0xea, 0x9c, 0x12, 0x5b, 0xee, 0x50, 0xc3, 0xc2, 0x66, 0x4f,
	0xb6, 0xba, 0x94, 0xd1, 0xa1, 0x55, 0xf0, 0x2c, 0xb8, 0xcc, 0x4d, 0x71, 0x57, 0xd3, 0xd9, 0x89,
	0xd3, 0x2e, 0x74, 0xa8, 0x21, 0x1f, 0xbf, 0x26, 0x5d, 0xda, 0x75, 0xda, 0xba, 0xa6, 0xfa, 0x41,
	0x6d, 0xe7, 0x58, 0x26, 0xaf, 0x58, 0x17, 0xfb, 0x5f, 0x3f, 0x56, 0xbc, 0x35, 0x2f, 0x84, 0xf5,
	0x2c, 0x62, 0x7b, 0x5f, 0x1e, 0xb1, 0x33, 0x16, 0xa1, 0x51, 0x8d, 0x06, 0x50, 0xd7, 0xf2, 0xf9,
	0xb9, 0xff, 0x38, 0x7c, 0x4b, 0xa3, 0x54, 0x3b, 0x25, 0x32, 0xb6, 0x74, 0x19, 0x9b, 0x26, 0x65,
	0x98, 0xe9, 0xd4, 0xb4, 0xb9, 0xf7, 0xa6, 0xf7, 0xd3, 0xd9, 0xd1, 0x88, 0xb9, 0x63, 0xbf, 0xc4,
	0x9a, 0x46, 0xba, 0x32, 0xb5, 0x3c, 0xc4, 0x34, 0x1a, 0x7d, 0x8e, 0x80, 0xe5, 0xb2, 0xdf, 0x2b,
	0xdc, 0x02, 0x11, 0x5d, 0x4d, 0x0b, 0x92, 0x90, 0x8b, 0x96, 0x62, 0x83, 0x7e, 0xf6, 0x5f, 0xb5,
	0xbd, 0x87, 0x74, 0x15, 0x49, 0xcd, 0x88, 0xae, 0x42, 0x04, 0x16, 0x4d, 0x6c, 0x90, 0x74, 0x44,
	0x12, 0x72, 0x2b, 0xa5, 0xc4, 0xa0, 0x9f, 0x05, 0xae, 0xdf, 0x3d, 0x43, 0x52, 0xd3, 0xf3, 0xc1,
	0xfb, 0x60, 0xc9, 0x66, 0x98, 0x39, 0x76, 0x3a, 0x2a, 0x09, 0xb9, 0x44, 0x71, 0xb3, 0x30, 0x94,
	0x95, 0xd7, 0x38, 0xf0, 0xbc, 0xa5, 0xe4, 0xa0, 0x9f, 0x8d, 0xb9, 0xd1, 0x3e, 0x1a, 0x49, 0x4d,
	0x1e, 0x07, 0xab, 0x00, 0x74, 0xba, 0x04, 0x33, 0xa2, 0x1e, 0x61, 0x96, 0x5e, 0x94, 0x84, 0xdc,
	0x6a, 0x31, 0x59, 0xf0, 0x14, 0x2b, 0xb4, 0x74, 0x83, 0xd8, 0x0c, 0x1b, 0x56, 0x29, 0x35, 0xe8,
	0x67, 0x93, 0x6e, 0x7c, 0x80, 0x45, 0x52, 0x73, 0x85, 0x5b, 0x0a, 0x73, 0xd3, 0x38, 0x96, 0x3a,
	0x4c, 0xf3, 0xcf, 0xbc, 0x34, 0x01, 0xd6, 0x4d, 0xc3, 0x2d, 0x85, 0xed, 0xad, 0x7f, 0xbb, 0xcc,
	0x08, 0x3f, 0x2e, 0x33, 0x2b, 0x7e, 0x1b, 0x3a, 0xb1, 0xd1, 0x36, 0x58, 0xdf, 0x27, 0x8c, 0xb7,
	0xd3, 0x24, 0xcf, 0x1d, 0x62, 0x33, 0x98, 0x08, 0x94, 0x73, 0xb5, 0x42, 0x04, 0xac, 0x8d, 0x10,
	0xb6, 0x45, 0x4d, 0x9b, 0x84, 0x21, 0x10, 0x8e, 0xcb, 0xc9, 0xe5, 0x2b, 0xfc, 0x99, 0x7c, 0x43,
	0xb1, 0x50, 0x1e, 0xa4, 0xca, 0x5e, 0xcb, 0x21, 0x3a, 0xc3, 0xdc, 0x42, 0x90, 0x1b, 0x6d, 0x80,
	0xff, 0x46, 0xbc, 0x75, 0x62, 0x73, 0x28, 0x7a, 0x00, 0xd6, 0xc7, 0xce, 0x38, 0xd7, 0xbb, 0x20,
	0x68, 0x38, 0x2d, 0x48, 0xd1, 0xdc, 0x6a, 0x31, 0x1d, 0xa6, 0x32, 0x04, 0x37, 0xc7, 0xb4, 0xb9,
	0x01, 0x52, 0x15, 0x72, 0x4a, 0xa6, 0xf8, 0x84, 0xe5, 0xf9, 0x1f, 0x6c, 0x84, 0x70, 0x7e, 0xae,
	0xfc, 0x39, 0x88, 0x4f, 0x74, 0x0a, 0x45, 0xb0, 0x59, 0x7e, 0xfc, 0xa8, 0xa1, 0xd4, 0x9f, 0x1e,
	0x1d, 0xb4, 0x94, 0xd6, 0x93, 0x83, 0xa3, 0x5a, 0xfd, 0x50, 0x79, 0x58, 0xab, 0x24, 0x17, 0x66,
	0xf8, 0x1a, 0xd5, 0x7a, 0xa5, 0x56, 0xdf, 0x4f, 0x0a, 0x30, 0x03, 0x36, 0x42, 0x3e, 0xa5, 0xdc,
	0xaa, 0x1d, 0x56, 0x93, 0x91, 0x19, 0xae, 0x92, 0x52, 0xaf, 0x57, 0x2b, 0xc9, 0x68, 0xf1, 0xd3,
	0x62, 0x50, 0xbf, 0x67, 0x33, 0x62, 0xc0, 0x33, 0x00, 0x82, 0x69, 0x43, 0x71, 0x24, 0xc2, 0xd4,
	0x0a, 0x88, 0x57, 0x0a, 0x84, 0xee, 0x7d, 0x50, 0x36, 0xdb, 0x29, 0x00, 0x41, 0x42, 0x71, 0xd8,
	0x09, 0x31, 0x99, 0xde, 0xf1, 0xae, 0x20, 0x5c, 0xb8, 0xf8, 0x22, 0x2e, 0xbc, 0xfb, 0xfe, 0xf3,
	0x63, 0x24, 0x05, 0xa1, 0xfc, 0x62, 0x57, 0x1e, 0x29, 0x29, 0x9f, 0xe9, 0xea, 0x39, 0x7c, 0x0b,
	0xe2, 0x13, 0xe3, 0x85, 0xd7, 0x82, 0x1a, 0x33, 0xc6, 0xfe, 0x1b, 0x0a, 0x77, 0xe6, 0x53, 0x80,
	0x28, 0x3e, 0x41, 0x61, 0x4f, 0xc8, 0xc3, 0x37, 0x20, 0x36, 0xbe, 0x33, 0x70, 0x6b, 0xba, 0xff,
	0x60, 0x95, 0x44, 0x31, 0x54, 0x7e, 0x6c, 0xa3, 0x50, 0x71, 0x3e, 0x81, 0x35, 0x38, 0x49, 0x00,
	0xbe, 0x17, 0x40, 0x7c, 0x62, 0x4d, 0xc6, 0xfa, 0x9f, 0xb5, 0x66, 0xe2, 0xf5, 0xab, 0xdc, 0x7f,
	0x31, 0x88, 0xfc, 0x8c, 0x41, 0x94, 0xe4, 0x8b, 0xaf, 0x99, 0x28, 0xc6, 0x18, 0xac, 0x76, 0xa8,
	0x31, 0x2c, 0x52, 0x8a, 0xf1, 0xfc, 0x0d, 0xf7, 0x21, 0x6d, 0x08, 0xcf, 0xf8, 0x45, 0xe8, 0x59,
	0xed, 0xf6, 0x92, 0xf7, 0xb8, 0xde, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0x83, 0x2a, 0x56, 0xab,
	0x6c, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CompanySystemClient is the client API for CompanySystem service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CompanySystemClient interface {
	GetCompany(ctx context.Context, in *GetCompanyRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	CreateCompany(ctx context.Context, in *CreateCompanyRequest, opts ...grpc.CallOption) (*CompanyResponse, error)
	GetCompanies(ctx context.Context, in *GetCompaniesRequest, opts ...grpc.CallOption) (*CompaniesResponse, error)
	DeleteCompany(ctx context.Context, in *DeleteCompanyRequest, opts ...grpc.CallOption) (*DeleteCompanyResponse, error)
}

type companySystemClient struct {
	cc *grpc.ClientConn
}

func NewCompanySystemClient(cc *grpc.ClientConn) CompanySystemClient {
	return &companySystemClient{cc}
}

func (c *companySystemClient) GetCompany(ctx context.Context, in *GetCompanyRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/company.CompanySystem/GetCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companySystemClient) CreateCompany(ctx context.Context, in *CreateCompanyRequest, opts ...grpc.CallOption) (*CompanyResponse, error) {
	out := new(CompanyResponse)
	err := c.cc.Invoke(ctx, "/company.CompanySystem/CreateCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companySystemClient) GetCompanies(ctx context.Context, in *GetCompaniesRequest, opts ...grpc.CallOption) (*CompaniesResponse, error) {
	out := new(CompaniesResponse)
	err := c.cc.Invoke(ctx, "/company.CompanySystem/GetCompanies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companySystemClient) DeleteCompany(ctx context.Context, in *DeleteCompanyRequest, opts ...grpc.CallOption) (*DeleteCompanyResponse, error) {
	out := new(DeleteCompanyResponse)
	err := c.cc.Invoke(ctx, "/company.CompanySystem/DeleteCompany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CompanySystemServer is the server API for CompanySystem service.
type CompanySystemServer interface {
	GetCompany(context.Context, *GetCompanyRequest) (*CompanyResponse, error)
	CreateCompany(context.Context, *CreateCompanyRequest) (*CompanyResponse, error)
	GetCompanies(context.Context, *GetCompaniesRequest) (*CompaniesResponse, error)
	DeleteCompany(context.Context, *DeleteCompanyRequest) (*DeleteCompanyResponse, error)
}

// UnimplementedCompanySystemServer can be embedded to have forward compatible implementations.
type UnimplementedCompanySystemServer struct {
}

func (*UnimplementedCompanySystemServer) GetCompany(ctx context.Context, req *GetCompanyRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompany not implemented")
}
func (*UnimplementedCompanySystemServer) CreateCompany(ctx context.Context, req *CreateCompanyRequest) (*CompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCompany not implemented")
}
func (*UnimplementedCompanySystemServer) GetCompanies(ctx context.Context, req *GetCompaniesRequest) (*CompaniesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanies not implemented")
}
func (*UnimplementedCompanySystemServer) DeleteCompany(ctx context.Context, req *DeleteCompanyRequest) (*DeleteCompanyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCompany not implemented")
}

func RegisterCompanySystemServer(s *grpc.Server, srv CompanySystemServer) {
	s.RegisterService(&_CompanySystem_serviceDesc, srv)
}

func _CompanySystem_GetCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanySystemServer).GetCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/company.CompanySystem/GetCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanySystemServer).GetCompany(ctx, req.(*GetCompanyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanySystem_CreateCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCompanyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanySystemServer).CreateCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/company.CompanySystem/CreateCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanySystemServer).CreateCompany(ctx, req.(*CreateCompanyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanySystem_GetCompanies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompaniesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanySystemServer).GetCompanies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/company.CompanySystem/GetCompanies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanySystemServer).GetCompanies(ctx, req.(*GetCompaniesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CompanySystem_DeleteCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCompanyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanySystemServer).DeleteCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/company.CompanySystem/DeleteCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanySystemServer).DeleteCompany(ctx, req.(*DeleteCompanyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CompanySystem_serviceDesc = grpc.ServiceDesc{
	ServiceName: "company.CompanySystem",
	HandlerType: (*CompanySystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCompany",
			Handler:    _CompanySystem_GetCompany_Handler,
		},
		{
			MethodName: "CreateCompany",
			Handler:    _CompanySystem_CreateCompany_Handler,
		},
		{
			MethodName: "GetCompanies",
			Handler:    _CompanySystem_GetCompanies_Handler,
		},
		{
			MethodName: "DeleteCompany",
			Handler:    _CompanySystem_DeleteCompany_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modules/company/proto/company.proto",
}
