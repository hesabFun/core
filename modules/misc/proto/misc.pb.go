// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: modules/misc/proto/misc.proto

package miscpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type VersionResponse struct {
	CommitHash           string           `protobuf:"bytes,1,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	ShortHash            string           `protobuf:"bytes,2,opt,name=short_hash,json=shortHash,proto3" json:"short_hash,omitempty"`
	BuildDate            *types.Timestamp `protobuf:"bytes,3,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	CommitDate           *types.Timestamp `protobuf:"bytes,4,opt,name=commit_date,json=commitDate,proto3" json:"commit_date,omitempty"`
	Count                int64            `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_751fdbe66d0eb629, []int{0}
}
func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *VersionResponse) GetShortHash() string {
	if m != nil {
		return m.ShortHash
	}
	return ""
}

func (m *VersionResponse) GetBuildDate() *types.Timestamp {
	if m != nil {
		return m.BuildDate
	}
	return nil
}

func (m *VersionResponse) GetCommitDate() *types.Timestamp {
	if m != nil {
		return m.CommitDate
	}
	return nil
}

func (m *VersionResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_751fdbe66d0eb629, []int{1}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type HealthResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_751fdbe66d0eb629, []int{2}
}
func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

type HealthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthRequest) Reset()         { *m = HealthRequest{} }
func (m *HealthRequest) String() string { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()    {}
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_751fdbe66d0eb629, []int{3}
}
func (m *HealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthRequest.Unmarshal(m, b)
}
func (m *HealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthRequest.Marshal(b, m, deterministic)
}
func (m *HealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthRequest.Merge(m, src)
}
func (m *HealthRequest) XXX_Size() int {
	return xxx_messageInfo_HealthRequest.Size(m)
}
func (m *HealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthRequest proto.InternalMessageInfo

type PubKeyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubKeyRequest) Reset()         { *m = PubKeyRequest{} }
func (m *PubKeyRequest) String() string { return proto.CompactTextString(m) }
func (*PubKeyRequest) ProtoMessage()    {}
func (*PubKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_751fdbe66d0eb629, []int{4}
}
func (m *PubKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubKeyRequest.Unmarshal(m, b)
}
func (m *PubKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubKeyRequest.Marshal(b, m, deterministic)
}
func (m *PubKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubKeyRequest.Merge(m, src)
}
func (m *PubKeyRequest) XXX_Size() int {
	return xxx_messageInfo_PubKeyRequest.Size(m)
}
func (m *PubKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PubKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PubKeyRequest proto.InternalMessageInfo

type PubKeyResponse struct {
	Pub                  string   `protobuf:"bytes,1,opt,name=pub,proto3" json:"pub,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubKeyResponse) Reset()         { *m = PubKeyResponse{} }
func (m *PubKeyResponse) String() string { return proto.CompactTextString(m) }
func (*PubKeyResponse) ProtoMessage()    {}
func (*PubKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_751fdbe66d0eb629, []int{5}
}
func (m *PubKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubKeyResponse.Unmarshal(m, b)
}
func (m *PubKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubKeyResponse.Marshal(b, m, deterministic)
}
func (m *PubKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubKeyResponse.Merge(m, src)
}
func (m *PubKeyResponse) XXX_Size() int {
	return xxx_messageInfo_PubKeyResponse.Size(m)
}
func (m *PubKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PubKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PubKeyResponse proto.InternalMessageInfo

func (m *PubKeyResponse) GetPub() string {
	if m != nil {
		return m.Pub
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionResponse)(nil), "misc.VersionResponse")
	proto.RegisterType((*VersionRequest)(nil), "misc.VersionRequest")
	proto.RegisterType((*HealthResponse)(nil), "misc.HealthResponse")
	proto.RegisterType((*HealthRequest)(nil), "misc.HealthRequest")
	proto.RegisterType((*PubKeyRequest)(nil), "misc.PubKeyRequest")
	proto.RegisterType((*PubKeyResponse)(nil), "misc.PubKeyResponse")
}

func init() { proto.RegisterFile("modules/misc/proto/misc.proto", fileDescriptor_751fdbe66d0eb629) }

var fileDescriptor_751fdbe66d0eb629 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x8b, 0xd4, 0x40,
	0x10, 0x25, 0x3b, 0xbb, 0xa3, 0xa9, 0x65, 0x77, 0xc6, 0x76, 0xc4, 0x21, 0xb8, 0xcc, 0x30, 0xa7,
	0xb9, 0x98, 0xe0, 0x7a, 0x12, 0x6f, 0x8b, 0x87, 0x85, 0x55, 0x0c, 0xa3, 0x78, 0xf0, 0xb2, 0x74,
	0x67, 0xda, 0xa4, 0x31, 0x9d, 0x8a, 0xd3, 0xdd, 0x0b, 0xb9, 0xfa, 0x17, 0xfc, 0x69, 0xfe, 0x00,
	0x2f, 0xfe, 0x0d, 0x41, 0xd2, 0x1f, 0x81, 0x88, 0xb0, 0xb7, 0xca, 0x7b, 0xf5, 0x5e, 0xbf, 0xaa,
	0x0a, 0x5c, 0x48, 0xdc, 0x9b, 0x9a, 0xab, 0x4c, 0x0a, 0x55, 0x64, 0xed, 0x01, 0x35, 0xda, 0x32,
	0xb5, 0x25, 0x39, 0xee, 0xeb, 0xe4, 0x79, 0x29, 0x74, 0x65, 0x58, 0x5a, 0xa0, 0xcc, 0x4a, 0x2c,
	0xd1, 0xf5, 0x31, 0xf3, 0xc5, 0x7e, 0x39, 0x51, 0x5f, 0x39, 0x51, 0xf2, 0xac, 0x44, 0x2c, 0x6b,
	0x9e, 0xd1, 0x56, 0x64, 0xb4, 0x69, 0x50, 0x53, 0x2d, 0xb0, 0x51, 0x9e, 0x5d, 0x79, 0x76, 0xf0,
	0xd0, 0x42, 0x72, 0xa5, 0xa9, 0x6c, 0x5d, 0xc3, 0xe6, 0x57, 0x04, 0xb3, 0x4f, 0xfc, 0xa0, 0x04,
	0x36, 0x3b, 0xae, 0x5a, 0x6c, 0x14, 0x27, 0x2b, 0x38, 0x2d, 0x50, 0x4a, 0xa1, 0x6f, 0x2b, 0xaa,
	0xaa, 0x65, 0xb4, 0x8e, 0xb6, 0xf1, 0x0e, 0x1c, 0x74, 0x4d, 0x55, 0x45, 0x2e, 0x00, 0x54, 0x85,
	0x07, 0xcf, 0x1f, 0x59, 0x3e, 0xb6, 0x88, 0xa5, 0x5f, 0x01, 0x30, 0x23, 0xea, 0xfd, 0xed, 0x9e,
	0x6a, 0xbe, 0x9c, 0xac, 0xa3, 0xed, 0xe9, 0x65, 0x92, 0xba, 0x24, 0x69, 0x48, 0x92, 0x7e, 0x0c,
	0x49, 0x76, 0xb1, 0xed, 0x7e, 0x43, 0x35, 0x27, 0xaf, 0x87, 0xa7, 0xad, 0xf6, 0xf8, 0x5e, 0xad,
	0x8f, 0x65, 0xc5, 0x0b, 0x38, 0x29, 0xd0, 0x34, 0x7a, 0x79, 0xb2, 0x8e, 0xb6, 0x93, 0x9d, 0xfb,
	0xd8, 0xcc, 0xe1, 0x7c, 0x18, 0xf0, 0x9b, 0xe1, 0xca, 0x22, 0xd7, 0x9c, 0xd6, 0xba, 0x0a, 0x13,
	0x6f, 0x66, 0x70, 0x16, 0x10, 0xd7, 0x32, 0x83, 0xb3, 0xdc, 0xb0, 0x1b, 0xde, 0x05, 0x60, 0x03,
	0xe7, 0x01, 0xf0, 0x5b, 0x9a, 0xc3, 0xa4, 0x35, 0xcc, 0x6f, 0xa7, 0x2f, 0x2f, 0xff, 0x44, 0x00,
	0xef, 0x84, 0x2a, 0x3e, 0x74, 0x4a, 0x73, 0x49, 0x72, 0x78, 0xe0, 0x1f, 0x26, 0x8b, 0xd4, 0x9e,
	0x79, 0x9c, 0x23, 0x79, 0xf2, 0x0f, 0xea, 0xc3, 0x2c, 0xbf, 0xff, 0xfc, 0xfd, 0xe3, 0x88, 0x90,
	0x79, 0x76, 0xf7, 0xc2, 0xfd, 0x29, 0x77, 0xde, 0xe6, 0x2d, 0x4c, 0x5d, 0x4c, 0xf2, 0xd8, 0x49,
	0x47, 0xa1, 0x93, 0xc5, 0x18, 0xf4, 0x76, 0x4f, 0xad, 0xdd, 0x23, 0x32, 0x1b, 0xec, 0x2a, 0xe7,
	0xf1, 0x1e, 0xe2, 0xdc, 0xb0, 0x5a, 0x14, 0x37, 0xbc, 0x0b, 0x86, 0xa3, 0xa1, 0x83, 0xe1, 0x78,
	0xf0, 0xff, 0x18, 0xb6, 0x86, 0x7d, 0xe5, 0xdd, 0xd5, 0x0a, 0x1e, 0x16, 0x28, 0xad, 0xe6, 0x2a,
	0xee, 0x17, 0x91, 0xf7, 0xf7, 0xca, 0xa3, 0xcf, 0xd3, 0x1e, 0x6a, 0x19, 0x9b, 0xda, 0x03, 0xbe,
	0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x63, 0x7a, 0xf5, 0xcc, 0x08, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MiscSystemClient is the client API for MiscSystem service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MiscSystemClient interface {
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
	Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error)
	PublicKey(ctx context.Context, in *PubKeyRequest, opts ...grpc.CallOption) (*PubKeyResponse, error)
}

type miscSystemClient struct {
	cc *grpc.ClientConn
}

func NewMiscSystemClient(cc *grpc.ClientConn) MiscSystemClient {
	return &miscSystemClient{cc}
}

func (c *miscSystemClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/misc.MiscSystem/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *miscSystemClient) Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/misc.MiscSystem/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *miscSystemClient) PublicKey(ctx context.Context, in *PubKeyRequest, opts ...grpc.CallOption) (*PubKeyResponse, error) {
	out := new(PubKeyResponse)
	err := c.cc.Invoke(ctx, "/misc.MiscSystem/PublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MiscSystemServer is the server API for MiscSystem service.
type MiscSystemServer interface {
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
	Health(context.Context, *HealthRequest) (*HealthResponse, error)
	PublicKey(context.Context, *PubKeyRequest) (*PubKeyResponse, error)
}

// UnimplementedMiscSystemServer can be embedded to have forward compatible implementations.
type UnimplementedMiscSystemServer struct {
}

func (*UnimplementedMiscSystemServer) Version(ctx context.Context, req *VersionRequest) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedMiscSystemServer) Health(ctx context.Context, req *HealthRequest) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedMiscSystemServer) PublicKey(ctx context.Context, req *PubKeyRequest) (*PubKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublicKey not implemented")
}

func RegisterMiscSystemServer(s *grpc.Server, srv MiscSystemServer) {
	s.RegisterService(&_MiscSystem_serviceDesc, srv)
}

func _MiscSystem_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiscSystemServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/misc.MiscSystem/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiscSystemServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MiscSystem_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiscSystemServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/misc.MiscSystem/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiscSystemServer).Health(ctx, req.(*HealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MiscSystem_PublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PubKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiscSystemServer).PublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/misc.MiscSystem/PublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiscSystemServer).PublicKey(ctx, req.(*PubKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MiscSystem_serviceDesc = grpc.ServiceDesc{
	ServiceName: "misc.MiscSystem",
	HandlerType: (*MiscSystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _MiscSystem_Version_Handler,
		},
		{
			MethodName: "Health",
			Handler:    _MiscSystem_Health_Handler,
		},
		{
			MethodName: "PublicKey",
			Handler:    _MiscSystem_PublicKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modules/misc/proto/misc.proto",
}
