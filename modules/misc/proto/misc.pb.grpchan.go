// Code generated by protoc-gen-grpchan. DO NOT EDIT.
// source: modules/misc/proto/misc.proto

package miscpb

import "github.com/fullstorydev/grpchan"
import "golang.org/x/net/context"
import "google.golang.org/grpc"

func RegisterHandlerMiscSystem(reg grpchan.ServiceRegistry, srv MiscSystemServer) {
	reg.RegisterService(&_MiscSystem_serviceDesc, srv)
}

type miscSystemChannelClient struct {
	ch grpchan.Channel
}

func NewMiscSystemChannelClient(ch grpchan.Channel) MiscSystemClient {
	return &miscSystemChannelClient{ch: ch}
}

func (c *miscSystemChannelClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.ch.Invoke(ctx, "/misc.MiscSystem/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *miscSystemChannelClient) Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.ch.Invoke(ctx, "/misc.MiscSystem/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *miscSystemChannelClient) PublicKey(ctx context.Context, in *PubKeyRequest, opts ...grpc.CallOption) (*PubKeyResponse, error) {
	out := new(PubKeyResponse)
	err := c.ch.Invoke(ctx, "/misc.MiscSystem/PublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
